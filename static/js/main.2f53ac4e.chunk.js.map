{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/post-status-filter/index.js","components/post-status-filter/post-status-filter.js","components/post-list-item/index.js","components/post-list-item/post-list-item.js","components/post-list/index.js","components/post-list/post-list.js","components/post-add-form/index.js","components/post-add-form/post-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","liked","allPosts","className","SearchPanel","props","state","term","onUpdateSearch","bind","e","target","value","this","setState","type","placeholder","onChange","Component","PostStatusFilter","buttons","name","label","map","filter","onFilterSelect","clazz","onClick","PostListItem","onDelete","onToggleImportant","onToggleLiked","classNames","important","like","Postlist","posts","elements","item","id","itemProps","PostAddForm","text","onValueChange","onSubmit","preventDefault","onAdd","App","data","deleteItem","addItem","maxId","index","findIndex","elem","slice","body","newItem","old","items","length","indexOf","visiblePosts","filterPost","searchPost","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2f53ac4e.chunk.js","sourcesContent":["import AppHeader from \"./app-header\";\r\nexport default AppHeader;","import React from \"react\";\r\nimport './app-header.css';\r\nconst AppHeader = ({liked, allPosts}) => {\r\n  return (\r\n    <div className='app-header d-flex'>\r\n      <h1>Осипов Алексей</h1>\r\n      <h2>{allPosts} записей, из них понравилось {liked}</h2>\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default AppHeader;","import SearchPanel from \"./search-panel\";\r\nexport default SearchPanel;","import React, {Component} from \"react\";\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      term: ''\r\n    }\r\n    this.onUpdateSearch = this.onUpdateSearch.bind(this)\r\n  }\r\n  onUpdateSearch(e) {\r\n    const term = e.target.value;\r\n    this.setState({term});\r\n    this.props.onUpdateSearch(term);\r\n  }\r\n  render() {\r\n    return (\r\n      <input\r\n        className='form=control search-input'\r\n        type='text'\r\n        placeholder='поиск по записям'\r\n        onChange={this.onUpdateSearch}\r\n      />\r\n    )\r\n  } \r\n}\r\n","import PostStatusFilter from \"./post-status-filter\";\r\nexport default PostStatusFilter;","import React, {Component} from \"react\";\r\nimport './post-status-filter.css';\r\n\r\nexport default class PostStatusFilter extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.buttons = [\r\n      {name: 'all', label: 'Все'},\r\n      {name: 'like', label: 'Понравилось'}\r\n    ]\r\n  }\r\n  render() {\r\n    const buttons = this.buttons.map(({name, label}) => {\r\n      const {filter, onFilterSelect} = this.props;\r\n      const active = filter === name;\r\n      const clazz = active ? 'btn-info' : 'btn-outline-secondary'\r\n      return (\r\n        <button \r\n        key={name} \r\n        type='button' \r\n        className={`btn ${clazz}`}\r\n        onClick={()=> onFilterSelect(name)}>{label}</button>\r\n      )\r\n    })\r\n    return (\r\n      <div className=\"btn-group\">\r\n        {buttons}\r\n      </div>\r\n    )\r\n  } \r\n}","import PostListItem from \"./post-list-item\";\r\nexport default PostListItem;","import React, {Component} from \"react\";\r\nimport './post-list-item.css';\r\n\r\nexport default class PostListItem extends Component {\r\n\r\n  render() {\r\n    const {label, onDelete, onToggleImportant, onToggleLiked, important, like} = this.props;\r\n    let classNames = 'app-list-item d-flex justify-content-between';\r\n    if (important) {\r\n      classNames +=' important';\r\n    }\r\n    if (like) {\r\n      classNames +=' like';\r\n    }\r\n    return(\r\n      <div className={classNames}>\r\n        <span \r\n        className='app-list-item-label'\r\n        onClick={onToggleLiked}>\r\n          {label}\r\n        </span>\r\n        <div className='d-flex justify-content-center align-items-center'>\r\n          <button\r\n          type='button'\r\n          className='btn-star btn-sm'\r\n          onClick={onToggleImportant}>\r\n            <i className='fa fa-star'></i>\r\n          </button>\r\n          <button\r\n          type='button'\r\n          className='btn-trash btn-sm'\r\n          onClick={onDelete}>\r\n            <i className='fa fa-trash-o'></i>\r\n          </button> \r\n          <i className='fa fa-heart'></i>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import Postlist from './post-list';\r\nexport default Postlist;","import React from \"react\";\r\nimport PostListItem from '../post-list-item';\r\nimport './post-list.css';\r\nconst PostList = ({posts, onDelete, onToggleImportant, onToggleLiked}) => {\r\n\r\n  const elements = posts.map((item) => {\r\n    const {id, ...itemProps} = item;\r\n    return (\r\n      <li key={id} className='list-group-item'>\r\n        <PostListItem \r\n        {...itemProps}\r\n        onDelete={() => onDelete(id)}\r\n        onToggleImportant={() => onToggleImportant(id)}\r\n        onToggleLiked={() => onToggleLiked(id)}/>\r\n      </li>\r\n    )\r\n  });\r\n  \r\n  return (\r\n    <ul className='app-list list-group'>\r\n      {elements}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default PostList;","import PostAddForm from './post-add-form';\r\nexport default PostAddForm;","import React, {Component} from \"react\";\r\nimport './post-add-form.css';\r\nexport default class PostAddForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      text: ''\r\n    }\r\n    this.onValueChange = this.onValueChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  onValueChange(e) {\r\n    this.setState({\r\n      text: e.target.value\r\n    })\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    this.props.onAdd(this.state.text);\r\n    this.setState({\r\n      text: ''\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form \r\n      className='bottom-panel d-flex'\r\n      onSubmit={this.onSubmit}>\r\n        <input\r\n          type='text'\r\n          placeholder='О чем Вы думаете сейчас?'\r\n          className='form-control new-post-label'\r\n          onChange={this.onValueChange}\r\n          value={this.state.text}\r\n        />\r\n        <button\r\n          type='submit'\r\n          className='btn btn-outline-secondaryA'>\r\n          Добавить\r\n          </button>\r\n      </form>\r\n    )\r\n  }\r\n}","import App from './app';\r\nexport default App;","import React, {Component} from \"react\";\r\n\r\nimport AppHeader from '../app-header';\r\nimport SearchPanel from \"../search-panel\";\r\nimport PostStatusFilter from \"../post-status-filter\";\r\nimport PostList from \"../post-list\";\r\nimport PostAddForm from \"../post-add-form\";\r\n\r\nimport './app.css'; \r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data : [\r\n        {label: 'Going to learn React', important: true,like: false, id: 1},\r\n        {label: 'That is so good', important: false,like: false, id: 2},\r\n        {label: 'I need a break...', important: false,like: false, id: 3}\r\n      ],\r\n      term: '',\r\n      filter: 'all'\r\n    };\r\n    this.deleteItem = this.deleteItem.bind(this);\r\n    this.addItem = this.addItem.bind(this);\r\n    this.onToggleImportant = this.onToggleImportant.bind(this);\r\n    this.onToggleLiked = this.onToggleLiked.bind(this);\r\n    this.onUpdateSearch = this.onUpdateSearch.bind(this);\r\n    this.onFilterSelect = this.onFilterSelect.bind(this);\r\n    this.maxId = 4;\r\n  }\r\n\r\n  deleteItem(id) {\r\n    this.setState(({data}) => {\r\n      const index = data.findIndex(elem => elem.id === id);\r\n      const newArr = [...data.slice(0, index), ...data.slice(index + 1)];\r\n\r\n      return {\r\n        data: newArr\r\n      }\r\n    });\r\n  }\r\n\r\n  addItem(body) {\r\n    const newItem = {\r\n      label: body,\r\n      important: false,\r\n      id: this.maxId++\r\n    }\r\n    this.setState(({data}) =>{\r\n      const newArr = [...data, newItem];\r\n      return {\r\n        data: newArr\r\n      }\r\n    })\r\n  }\r\n\r\n  onToggleImportant(id) {\r\n    this.setState(({data}) => {\r\n      const index = data.findIndex(elem => elem.id === id);\r\n\r\n      const old = data[index];\r\n      const newItem = {...old, important: !old.important};\r\n\r\n      const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\r\n\r\n      return {\r\n        data: newArr\r\n      }\r\n    })\r\n  }\r\n\r\n  onToggleLiked(id) {\r\n    this.setState(({data}) => {\r\n      const index = data.findIndex(elem => elem.id === id);\r\n\r\n      const old = data[index];\r\n      const newItem = {...old, like: !old.like};\r\n\r\n      const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\r\n\r\n      return {\r\n        data: newArr\r\n      }\r\n    })\r\n  }\r\n\r\n  searchPost(items, term) {\r\n    if (term.length === 0) {\r\n      return items\r\n    }\r\n    return items.filter((item) => {\r\n      return item.label.indexOf(term) > -1\r\n    })\r\n  }\r\n\r\n  filterPost(items, filter) {\r\n    if (filter === \"like\") {\r\n      return items.filter(item => item.like)\r\n    } else {\r\n      return items\r\n    }\r\n  }\r\n\r\n  onUpdateSearch(term) {\r\n    this.setState({term});\r\n  }\r\n\r\n  onFilterSelect(filter) {\r\n    this.setState({filter});\r\n  }\r\n\r\n  render() {\r\n    const {data, term, filter} = this.state;\r\n    \r\n    const liked = data.filter(item => item.like).length;\r\n    const allPosts = data.length;\r\n    const visiblePosts = this.filterPost(this.searchPost(data, term), filter);\r\n\r\n    return (\r\n      <div className='app'>\r\n        <AppHeader\r\n        liked={liked}\r\n        allPosts={allPosts}/>\r\n        <div className='search-panel d-flex'>\r\n          <SearchPanel\r\n            onUpdateSearch={this.onUpdateSearch}/>\r\n          <PostStatusFilter\r\n          filter={filter}\r\n          onFilterSelect={this.onFilterSelect}/>\r\n        </div>\r\n        <PostList \r\n          posts={visiblePosts} \r\n          onDelete={this.deleteItem}\r\n          onToggleImportant={this.onToggleImportant}\r\n          onToggleLiked={this.onToggleLiked}/>\r\n        <PostAddForm\r\n          onAdd={this.addItem}/>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}